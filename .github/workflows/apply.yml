name: Apply Terraform Environment

on:
  workflow_dispatch:
    inputs:
      apply_confirmation:
        description: 'Confirm Apply (yes/no)'
        required: true
        default: 'no'

jobs:
  Apply_Infrastructure:
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🔑 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      - name: ⚙️ Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2

      - name: 📌 Terraform Init
        working-directory: ./terraform
        run: terraform init -input=false
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 📋 Terraform Plan
        id: plan
        working-directory: ./terraform
        run: |
          terraform plan -input=false -no-color -out=tfplan
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: 🚀 Apply Terraform Changes
        if: github.event.inputs.apply_confirmation == 'yes'
        id: apply
        working-directory: ./terraform
        run: |
          terraform apply -input=false -no-color tfplan
        env:
          TF_VAR_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          TF_VAR_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ✅ Confirm Success
        if: success()
        run: echo "Terraform Apply Completed Successfully!"

      - name: ❌ Capture Failure
        if: failure()
        run: echo "Terraform Apply Failed!" && exit 1
